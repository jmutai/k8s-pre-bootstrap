---
# Set facts
- name: Set fact - os_distrib_version
  set_fact:
    os_distrib_version: "{{ ansible_distribution | replace(' ', '') }}{{ ansible_distribution_major_version }}"  # "AstraLinux1" "CentOS8"

- name: Set fact - os_family_version
  set_fact:
    os_family_version: "{{ ansible_os_family | replace(' ', '') }}{{ ansible_distribution_major_version }}"  # "AstraLinux1" "RedHat8"

- name: Set fact - os_distrib_version
  set_fact:
    os_distrib: "{{ ansible_distribution | replace(' ', '') }}"  # "AstraLinux" "CentOS"

- name: Set fact - os_family_version
  set_fact:
    os_family: "{{ ansible_os_family | replace(' ', '') }}"  # "AstraLinux" "RedHat"

# - name: Check support for Operating System
#   vars_files:
#     - vars/main_vars.yml
#   fail:
#     msg: "Operating System = {{ os }} not supported.
#           Supported versions are {{ supported_os }}"
#   when: os not in supported_os

# OS Prepare
- name: OS Prepare
  hosts: all
  # remote_user: <user>
  become: yes
  become_method: sudo
  gather_facts: no
  vars_files:
    - vars/main.yml
  roles:
    - os-prepare
  when: os_prepare
  tags: os_prep

# Kubernetes Setup
- name: Kubernetes Setup
  hosts: kube
  # remote_user: <user>
  become: yes
  become_method: sudo
  gather_facts: no
  vars_files:
    - vars/main.yml
  roles:
    - kubernetes-setup
  when: kubernetes_setup
  tags: kube_set

# HA Setup
- name: HA Setup
  hosts: kube-masters
  # remote_user: <user>
  become: yes
  become_method: sudo
  gather_facts: no
  vars_files:
    - vars/main.yml
  roles:
    - ha-setup
  when: ha_setup
  tags: ha_set
