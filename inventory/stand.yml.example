all:
  vars:
    # SSH options
    ansible_user: "user1"                              # User which is used when accessing the remote machines via SSH.
                                                       # If commented out or leave an empty value, then the playbook will use the current user on behalf of which the playbook is running. This is the default ansible behavior.
    ansible_private_key_file: "~/.ssh/id_ed25519"      # SSH key file that contains the key that is used when accessing the remote machines via SSH.
                                                       # If you comment out or leave an empty value, then the playbook will try to find other keys, if they are not there, it will create a new key for the specified user `ansible_user`, if the user is not specified, then for the current one.

    # Main options
    ## I. Prepare OS
    os_prepare: true              # Prepare OS?
    #### I. Prepare OS - on/off tasks
    pre_tasks1: false             # Execute PRE tasks? (many specific tasks (for a particular OS)).
    post_tasks1: false            # Execute POST tasks? (many specific tasks (for a particular OS)).
    config_os_network: true       # Сopy hosts & resolv.conf?
    config_pm: true               # Сonfigure package manager (for example sources.list)?
    setup_proxy: false            # Configure OS proxy? (/etc/environment, /etc/profile.d/http_proxy.sh).
    remove_firewall: false        # Set to true to uninstall firewall package at all.
    firewall: false               # Install and configure firewall?
    config_ac: true               # Configure Access Control system? (SELinux\AppArmor\parsec).
    reboot: true                  # Reboot servers?
    upgrade_os: true              # Should you upgrade the OS?
    install_pack: true            # Install of various programs? (the list of programs 'basic_packages' is in files in the folder vars/).
    configure_timezone_ntp: true  # Configure timezone and install NTP client?
    #### I. Prepare OS - values
    # Proxy settings
    proxy_server: "192.168.101.100"             # Proxy server ip address.
    proxy_port: "3128"                          # Proxy server port.
                                                # Adresses to exclude from proxy.
    no_proxy: "127.0.0.1,localhost,.svc,.local,.0,.1,.2,.3,.4,.5,.6,.7,.8,.9,.10,.11,.12,.13,.14,.15,.16,.17,.18,.19,.20,.21,.22,.23,.24,.25,.26,.27,.28,.29,.30,.31,.32,.33,.34,.35,.36,.37,.38,.39,.40,.41,.42,.43,.44,.45,.46,.47,.48,.49,.50,.51,.52,.53,.54,.55,.56,.57,.58,.59,.60,.61,.62,.63,.64,.65,.66,.67,.68,.69,.70,.71,.72,.73,.74,.75,.76,.77,.78,.79,.80,.81,.82,.83,.84,.85,.86,.87,.88,.89,.90,.91,.92,.93,.94,.95,.96,.97,.98,.99,.100,.101,.102,.103,.104,.105,.106,.107,.108,.109,.110,.111,.112,.113,.114,.115,.116,.117,.118,.119,.120,.121,.122,.123,.124,.125,.126,.127,.128,.129,.130,.131,.132,.133,.134,.135,.136,.137,.138,.139,.140,.141,.142,.143,.144,.145,.146,.147,.148,.149,.150,.151,.152,.153,.154,.155,.156,.157,.158,.159,.160,.161,.162,.163,.164,.165,.166,.167,.168,.169,.170,.171,.172,.173,.174,.175,.176,.177,.178,.179,.180,.181,.182,.183,.184,.185,.186,.187,.188,.189,.190,.191,.192,.193,.194,.195,.196,.197,.198,.199,.200,.201,.202,.203,.204,.205,.206,.207,.208,.209,.210,.211,.212,.213,.214,.215,.216,.217,.218,.219,.220,.221,.222,.223,.224,.225,.226,.227,.228,.229,.230,.231,.232,.233,.234,.235,.236,.237,.238,.239,.240,.241,.242,.243,.244,.245,.246,.247,.248,.249,.250,.251,.252,.253,.254,.255,server1,serverX"
    #
    selinux_state: permissive                   # SELinux state to be set on k8s nodes. Сan take one of these three values:
                                                #   enforcing - SELinux security policy is enforced.
                                                #   permissive - SELinux prints warnings instead of enforcing.
                                                #   disabled - No SELinux policy is loaded
    timezone: "Europe/Moscow"                   # Timezone to set on all nodes.
    ntp_servers: "192.168.101.2 192.168.101.3"  # list NTP server for configure NTP client.
    ###### Network configuration files
    ######## /etc/hosts
    hosts_file: |
      127.0.0.1       localhost

      # The following lines are desirable for IPv6 capable hosts
      ::1     localhost ip6-localhost ip6-loopback
      ff02::1 ip6-allnodes
      ff02::2 ip6-allrouters
    ######## /etc/resolv.conf
    resolv_conf_file: |
      nameserver 192.168.101.12
      domain mydomain.local

    ## II. Kubernetes setup
    kubernetes_setup: true        # Do you want to install the Kubernetes?
    #### II. Kubernetes setup - on/off tasks
    pre_tasks2: false             # Execute PRE tasks? (many specific tasks (for a particular OS)).
    post_tasks2: false            # Execute POST tasks? (many specific tasks (for a particular OS)).
    etc_hosts: false              # Add to /etc/hosts all servers? (if you have DNS, then this is not necessary).
    #### II. Kubernetes setup - values
    # Kubernetes settings
    k8s_packages_version: "1.23.4-00"     # (example: "1.23.4-00") Kubernetes packages version. Leave the value empty for 'latest'.
    k8s_version: "1.23"                   # (example: "1.23") Kubernetes version for CRI-O repo.
    k8s_cni: calico                       # calico, flannel.
    container_runtime: docker             # docker, cri-o, containerd.
    pod_network_cidr: "10.244.0.0/16"     # Pod subnet if using cri-o runtime (10.244.0.0/16;192.168.0.0/16).
    k8s_admins: ['root']                  # Kubernetes administrators on masters. There must be at least one administrator (example, root), otherwise it will not be possible to initialize CNI plugin.

    ## III. HA setup
    ha_setup: true                # Do you want to setup HA (keepalive + haproxy)?
    #### III. HA setup - on/off tasks
    pre_tasks3: false             # Execute PRE tasks? (many specific tasks (for a particular OS)).
    post_tasks3: false            # Execute POST tasks? (many specific tasks (for a particular OS)).
    #### III. HA setup - values
    vip: 172.26.12.60                     # Virtual IP (VIP)
    vip_port: 8443                        # VIP for k8s HA

# List hosts
  children:
    kube:          # Kubernetes nodes
      hosts:
        pp-bal-01:
        pp-cach-01:
        pp-kafka-01:
        pp-kafka-02:
        pp-kafka-03:
        pp-sk8s-01:
        pp-sk8s-02:
        pp-sk8s-03:
        pp-sk8s-04:
        pp-sk8s-05:
        pp-ceph-osd-01:
        pp-ceph-osd-02:
        pp-ceph-osd-03:
        pp-ceph-s-01:
        pp-ceph-s-02:
        pp-ceph-s-03:
        pp-ceph-s-04:
        pp-mk8s-01:
        pp-mk8s-02:
        pp-mk8s-03:
    kube_masters:  # Kubernetes masters
      hosts:
        pp-mk8s-01:
        pp-mk8s-02:
        pp-mk8s-03:
    auxiliary:
      hosts:       # Additional servers
        pp-dns-01:
        pp-ntp-01:
